/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EnvironmentSensorEnterprise.NoisePollutionManagement;

import Business.Oragnization.EnvironmentSensorOrganization;
import Business.Oragnization.Organization;
import Business.Oragnization.OrganizationDirectory;
import Business.Sensor.NoisePollutionSensorDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AirPollutionWorkRequest;
import Business.WorkQueue.NoisePollutionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aishw
 */
public class ViewNoisePollutionWorkQueueJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    /**
     * Creates new form ViewNoisePollutionWorkQueueJPanel
     */
    public ViewNoisePollutionWorkQueueJPanel(JPanel userProcessContainer, UserAccount userAccount, OrganizationDirectory directory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.directory = directory;
        
        populateTable();
    }

    public void populateTable(){
        NoisePollutionWorkRequest noise_works = null;
        DefaultTableModel model = (DefaultTableModel) NoisePollutionWorkQueueJTable.getModel();
        model.setRowCount(0);
        
        for(Organization organization : directory.getOrganizationList())
        {
            if(organization instanceof EnvironmentSensorOrganization)
            {
                for (WorkRequest workr : organization.getWorkQueue().getWorkRequestList()) {
                    if (workr instanceof NoisePollutionWorkRequest) {
                        noise_works = (NoisePollutionWorkRequest)workr;
            
                        Object[] row = new Object[7];
                        row[0] = noise_works;
                        row[1] = noise_works.getSender();
                        row[2] = noise_works.getNoisePollutionSensor().getSensorId();
                        row[3] = noise_works.getNoisePollutionSensor().getZipcode();
                        row[4] = noise_works.getStatus();
                        row[5] = noise_works.getMsg();
                        row[6] = noise_works.getRqstDate();
                        model.addRow(row);
                }
                }
            }
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        NoisePollutionWorkQueueJTable = new javax.swing.JTable();
        btnPendingRequest = new javax.swing.JButton();
        lblPending = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PendingReqJTable = new javax.swing.JTable();
        lblresolve = new javax.swing.JLabel();
        btnResolved = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ResolvedJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Noise Pollution Work Request");

        NoisePollutionWorkQueueJTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NoisePollutionWorkQueueJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Request ID", "Sender", "Sensor ID", "Zipcode", "Status", "Message", "Sent Date"
            }
        ));
        jScrollPane2.setViewportView(NoisePollutionWorkQueueJTable);

        btnPendingRequest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPendingRequest.setText("Get Pending Requests");
        btnPendingRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPendingRequestActionPerformed(evt);
            }
        });

        lblPending.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblPending.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPending.setText("Pending Requests");

        PendingReqJTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PendingReqJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Request ID", "Sender", "Sensor ID", "Zipcode", "Status", "Message", "Sent Date"
            }
        ));
        jScrollPane1.setViewportView(PendingReqJTable);

        lblresolve.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblresolve.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblresolve.setText("Resolved Requests");

        btnResolved.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnResolved.setText("Get Resolved Work Requests");
        btnResolved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolvedActionPerformed(evt);
            }
        });

        ResolvedJTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ResolvedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Request ID", "Sender", "Sensor ID", "Zipcode", "Status", "Message", "Sent Date"
            }
        ));
        jScrollPane3.setViewportView(ResolvedJTable);

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPending, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194)
                .addComponent(btnPendingRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblresolve, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)
                        .addComponent(btnResolved, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPending, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPendingRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblresolve, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResolved, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(342, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPendingRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPendingRequestActionPerformed
        // TODO add your handling code here:
        NoisePollutionWorkRequest noise_workrs = null;
        DefaultTableModel model = (DefaultTableModel) PendingReqJTable.getModel();
        model.setRowCount(0);

        for(Organization organization : directory.getOrganizationList())
        {
            if(organization instanceof EnvironmentSensorOrganization)
            {
                for (WorkRequest workr : organization.getWorkQueue().getWorkRequestList()) {
                    if (workr instanceof NoisePollutionWorkRequest)    {
                    noise_workrs = (NoisePollutionWorkRequest)workr;

                    if(!noise_workrs.getStatus().equalsIgnoreCase("Resolved"))
                    {
                        Object[] row = new Object[7];
                        row[0] = noise_workrs;
                        row[1] = noise_workrs.getSender();
                        row[2] = noise_workrs.getNoisePollutionSensor().getSensorId();
                        row[3] = noise_workrs.getNoisePollutionSensor().getZipcode();
                        row[4] = noise_workrs.getStatus();
                        row[5] = noise_workrs.getMsg();
                        row[6] = noise_workrs.getRqstDate();
                        model.addRow(row);
                    }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnPendingRequestActionPerformed

    private void btnResolvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolvedActionPerformed
        // TODO add your handling code here:
        NoisePollutionWorkRequest noise_workrs = null;
        DefaultTableModel model = (DefaultTableModel) ResolvedJTable.getModel();
        model.setRowCount(0);

        for(Organization organization : directory.getOrganizationList())
        {
            if(organization instanceof EnvironmentSensorOrganization)
            {
                for (WorkRequest workr : organization.getWorkQueue().getWorkRequestList()) {
                    if (workr instanceof NoisePollutionWorkRequest)    {
                    noise_workrs = (NoisePollutionWorkRequest)workr;

                    if(noise_workrs.getStatus().equalsIgnoreCase("Resolved"))
                    {
                        Object[] row = new Object[8];
                        row[0] = noise_workrs;
                        row[1] = noise_workrs.getSender();
                        row[2] = noise_workrs.getNoisePollutionSensor().getSensorId();
                        row[3] = noise_workrs.getNoisePollutionSensor().getZipcode();
                        row[4] = noise_workrs.getStatus();
                        row[5] = noise_workrs.getMsg();
                        row[6] = noise_workrs.getRqstDate();
                        row[7] = noise_workrs.getRslvDate();
                        model.addRow(row);
                    }
                }
                }
            }
        }
    }//GEN-LAST:event_btnResolvedActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable NoisePollutionWorkQueueJTable;
    private javax.swing.JTable PendingReqJTable;
    private javax.swing.JTable ResolvedJTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPendingRequest;
    private javax.swing.JButton btnResolved;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPending;
    private javax.swing.JLabel lblresolve;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnvManagementRoles;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Oragnization.NoisePollutionOrganization;
import Business.Oragnization.Organization;
import Business.Oragnization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.NoisePollutionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apurv
 */
public class NoisePollutionManagementWorkQueueJPanel extends javax.swing.JPanel {

   private OrganizationDirectory directory;
    private UserAccount userAccount;
    private NoisePollutionOrganization organization; 
    private Enterprise enterprise; 
    private EcoSystem business;
    private JPanel userProcessContainer;
    /**
     * Creates new form NoisePollutionManagementWorkQueueJPanel
     */
    public NoisePollutionManagementWorkQueueJPanel(JPanel userProcessContainer, UserAccount userAccount, OrganizationDirectory directory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.directory = directory;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        
        populateTable();        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_NoiseTAble = new javax.swing.JTable();
        btn_Back = new javax.swing.JButton();
        btn_Resolve = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Noise Pollution Work Queue");

        tbl_NoiseTAble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title WorkRequest_ID", "Sender", "SensorID", "Zipcode", "Status"
            }
        ));
        jScrollPane1.setViewportView(tbl_NoiseTAble);

        btn_Back.setText("<<BACK");
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        btn_Resolve.setText("Resolve");
        btn_Resolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResolveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Resolve)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Back)
                    .addComponent(btn_Resolve))
                .addContainerGap(303, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        JPanel panel = new NoisePollutionWorkAreaJPanel(userProcessContainer,userAccount,organization, enterprise,business);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btn_BackActionPerformed

    private void btn_ResolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResolveActionPerformed
        // TODO add your handling code here:
        int row = tbl_NoiseTAble.getSelectedRow();
        if(row <0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }else{
        Random rn = new Random();

        WorkRequest workRequest = (WorkRequest) tbl_NoiseTAble.getValueAt(row, 0);

        NoisePollutionWorkRequest noisePollutionWorkRequest = (NoisePollutionWorkRequest)workRequest;
        noisePollutionWorkRequest.setStatus("Resolved");
        noisePollutionWorkRequest.setRslvDate(new Date());

        noisePollutionWorkRequest.getNoisePollutionSensor().setNoiseLevelInDecibel(rn.nextInt(60));

        populateTable();
        
        JOptionPane.showMessageDialog(null, "problem resolved");
        }
    }//GEN-LAST:event_btn_ResolveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Resolve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_NoiseTAble;
    // End of variables declaration//GEN-END:variables

    private void populateTable() { NoisePollutionWorkRequest noise_wrs = null;
        DefaultTableModel model = (DefaultTableModel) tbl_NoiseTAble.getModel();
        model.setRowCount(0);
        
        for(Organization organization : directory.getOrganizationList())
        {
        for (WorkRequest wr : organization.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof NoisePollutionWorkRequest){
                noise_wrs = (NoisePollutionWorkRequest)wr;
            
                Object[] row = new Object[8];
                row[0] = noise_wrs;
                row[1] = noise_wrs.getSender();
                row[2] = noise_wrs.getNoisePollutionSensor().getSensorId();
                row[3] = noise_wrs.getNoisePollutionSensor().getZipcode();
                row[4] = noise_wrs.getStatus();
                row[5] = noise_wrs.getMsg();
                row[6] = noise_wrs.getRqstDate();
                row[7] = noise_wrs.getRslvDate();
                model.addRow(row);
        }
        }
    }
         //To change body of generated methods, choose Tools | Templates.
    }
}
